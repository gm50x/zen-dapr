version: '3'

networks:
  skynet:
    name: zen-skynet
    driver: bridge

volumes:
  zen-pgdata:
    name: 'zen-pgdata'
  zen-mongodata:
    name: 'zen-mongodata'

services:
  pgsql:
    image: postgres:alpine
    environment:
      POSTGRES_DB: ${PGDB_NAME}
      POSTGRES_USER: ${PGDB_USER}
      POSTGRES_PASSWORD: ${PGDB_PASS}
    ports: [ '5432:5432' ]
    volumes: [ 'zen-pgdata:/var/lib/postgresql/data' ]
    container_name: pgsql
    networks: [ skynet ]
  mongo:
    image: mongo:5.0.6
    container_name: mongo
    ports: [ "27017:27017" ]
    volumes: [ 'zen-mongodata:/data/db' ]
    networks: [ skynet ]
  redis:
    image: 'redis:alpine'
    container_name: 'redis'
    networks: [ skynet ]
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    networks: [ skynet ]
  sandbox:
    build:
      context: .
      args:
        target: sandbox
    image: zen/sandbox
    container_name: sandbox
    environment:
      - APP_NAME=sandbox
    env_file: [ .env ]
    ports: [ 30000:3000, 9229:9229 ]
    command: 'sh -c "npm i && npm run start:debug --debug 0.0.0.0:9229 sandbox"'
    volumes: [ '.:/app', '/app/prisma', '/app/node_modules' ]
    networks: [ skynet ]
    depends_on: [ pgsql ]
  sandbox-dapr:
    image: 'daprio/daprd:1.6.0'
    container_name: sandbox-dapr
    command: "./daprd -app-id sandbox -app-port 3000 -placement-host-address placement:50005 -components-path /.dapr/components -config /.dapr/config.yaml"
    volumes:
      - './dapr/config.yaml:/.dapr/config.yaml'
      - './dapr/secrets.json:/.dapr/secrets.json'
      - './dapr/components/secrets.yaml:/.dapr/components/secrets.yaml'
      - './dapr/components/state.yaml:/.dapr/components/state.yaml'
      - './dapr/components/pubsub.yaml:/.dapr/components/pubsub.yaml'
    network_mode: 'service:sandbox'
    depends_on: [ sandbox, redis, mongo, pgsql, zipkin ]
